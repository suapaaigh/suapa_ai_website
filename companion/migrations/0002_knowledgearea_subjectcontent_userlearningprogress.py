# Generated by Django 5.2.6 on 2025-09-28 07:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('companion', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KnowledgeArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('education_level', models.CharField(choices=[('nursery', 'Nursery'), ('primary', 'Primary'), ('jhs', 'Junior High School'), ('shs', 'Senior High School'), ('tertiary', 'Tertiary')], max_length=20)),
                ('grade_levels', models.JSONField(default=list, help_text='List of applicable grade levels')),
                ('subject_category', models.CharField(choices=[('core', 'Core Subject'), ('elective', 'Elective Subject'), ('vocational', 'Vocational Subject'), ('extracurricular', 'Extracurricular')], max_length=20)),
                ('curriculum_code', models.CharField(blank=True, help_text='Official curriculum code', max_length=20)),
                ('learning_objectives', models.JSONField(default=list, help_text='List of learning objectives')),
                ('assessment_criteria', models.JSONField(default=list, help_text='Assessment criteria and standards')),
                ('topics', models.JSONField(default=list, help_text='Main topics covered in this subject')),
                ('skills_developed', models.JSONField(default=list, help_text='Skills students develop')),
                ('is_active', models.BooleanField(default=True)),
                ('difficulty_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('estimated_hours', models.IntegerField(blank=True, help_text='Estimated learning hours', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='leads_to', to='companion.knowledgearea')),
            ],
            options={
                'verbose_name': 'Knowledge Area',
                'verbose_name_plural': 'Knowledge Areas',
                'ordering': ['education_level', 'name'],
                'unique_together': {('name', 'education_level')},
            },
        ),
        migrations.CreateModel(
            name='SubjectContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('content_type', models.CharField(choices=[('lesson', 'Lesson'), ('exercise', 'Exercise'), ('quiz', 'Quiz'), ('project', 'Project'), ('resource', 'Resource'), ('video', 'Video'), ('reading', 'Reading Material')], max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('content_data', models.JSONField(default=dict, help_text='Structured content data')),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('order_index', models.IntegerField(default=0)),
                ('learning_outcomes', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('success_rate', models.FloatField(default=0.0, help_text='Average success rate among users')),
                ('engagement_score', models.FloatField(default=0.0, help_text='Average engagement score')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('knowledge_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='companion.knowledgearea')),
            ],
            options={
                'verbose_name': 'Subject Content',
                'verbose_name_plural': 'Subject Contents',
                'ordering': ['knowledge_area', 'order_index', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserLearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('mastered', 'Mastered'), ('needs_review', 'Needs Review')], default='not_started', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('attempts', models.IntegerField(default=0)),
                ('best_score', models.FloatField(blank=True, null=True)),
                ('average_score', models.FloatField(blank=True, null=True)),
                ('time_spent_minutes', models.IntegerField(default=0)),
                ('difficulty_adjustment', models.FloatField(default=0.0, help_text='Adjustment factor for content difficulty')),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('mastery_level', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='companion.subjectcontent')),
                ('knowledge_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companion.knowledgearea')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Learning Progress',
                'verbose_name_plural': 'User Learning Progress',
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'knowledge_area', 'content')},
            },
        ),
    ]
